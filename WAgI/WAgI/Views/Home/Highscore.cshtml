@model IEnumerable<WAgI.Entities.Score>

@{
    var pageIndex = (int)TempData["pageIndex"];
    var lastPageNumber = (int)TempData["lastPageNumber"];
    ViewBag.Title = "Highscore";
    Layout = "_Layout";
}

<environment include="Development">
    <link rel="stylesheet" type="text/css" href="../../styles/general.css" />
    <link href="https://fonts.googleapis.com/css?family=Acme" rel="stylesheet">
</environment>

<style>
    .tabel-container {
        width: 100%;
        align-content: center;
    }

    table {
        position: relative;
        left: 0;
        height: 20rem;
        width: 40rem;
        font-family: 'Acme', sans-serif;
        font-size: 20px;
        max-width: 70rem;
        background-color: black;
        color: white;
        display: inline-block;
        border: 2px solid white;
    }

    th {
        padding-left: 5rem;
        padding-right: 4.7rem;
        background-color: rgb(230, 194, 0);
        color: black;
    }
</style>

<div class="tabel-container">
    <img alt="logo" src="../../images/logo.png" />

    <h5>In a galaxy far far away ...4 developers tried to conquer the universe</h5>
    <input class="button" type="button" id="leftButton" value="Prev" />
    <table class="table" id="highscore_table">
        <thead>
            <tr>
                <th>
                    Rank
                </th>
                <th>
                    Nickname
                </th>
                <th>
                    Score
                </th>
            </tr>
        </thead>
        <tbody id="highscore_tbody">
            @{
                var i = (pageIndex - 1) * 10 + 1;
                var j = 0;
                foreach (var item in Model)
                {
                    <tr id="initialTr_@j">
                        <td id="h_rank_@j">
                            @i
                        </td>
                        <td id="h_nickname_@j">
                            @Html.DisplayFor(modelItem => item.Nickname)
                        </td>
                        <td id="h_value_@j">
                            @Html.DisplayFor(modelItem => item.Value)
                        </td>
                    </tr>

                    ++i;
                    ++j;
                }
            }
        </tbody>
    </table>

    <input class="button" type="button" id="rightButton" value="Next" />

    <div class="pagination">
        @for (i = 1; i <= lastPageNumber; ++i)
        {
            <input type="button" id="page_@i" value="@i" onclick="getAjaxValues(@i)" />
        }
    </div>

    <div class="buttons">
        <div class="button-container">
            <a asp-action="Index">
                <input class="button" type="button" value="Back">
            </a>
        </div>
    </div>

    <input id="nickname" name="nickname" required="required" type="text" value="">
    <br />
    <button class="button" type="submit" id="searchButton">Search</button>

</div>

@section Scripts
    {
    <script>
        var pathArray = window.location.pathname.split('/');
        var currentPage = parseInt(pathArray[pathArray.length - 1]);

        /* Hide the pages that are too far away from the current page */
        var haveOnePageHidden = false;
        var pageToHideId = 4;
        for (; pageToHideId <= currentPage - 3; pageToHideId++) {
            pageToHide = document.getElementById('page_' + pageToHideId);

            pageToHide.style.display = 'none';
            haveOnePageHidden = true;
        }

        /* Punctele de suspensie */
        if (haveOnePageHidden === true) {
            pageToHide.insertAdjacentHTML('afterEnd',
                '<div class="ephemerText" style="display: inline-block;">...</div>');
        }

        haveOnePageHidden = false;
        for (pageToHideId = currentPage + 3; pageToHideId <= @lastPageNumber - 3; pageToHideId++) {
            pageToHide = document.getElementById('page_' + pageToHideId);

            pageToHide.style.display = 'none';
            haveOnePageHidden = true;
        }

        if (haveOnePageHidden === true) {
            pageToHide.insertAdjacentHTML('afterEnd',
                '<div class="ephemerText" style="display: inline-block;">...</div>');
        }

        /* Make the current page button yellow */
        var currentPageButton = document.getElementById("page_" + currentPage);
        currentPageButton.style.color = 'yellow';

        var leftButton = document.getElementById("leftButton");
        var rightButton = document.getElementById("rightButton");

        /* Funcitonality of "Prev" button */
        var isLastPage = false;
        leftButton.addEventListener("click",
            function() {
                isLastPage = false;

                if (currentPage > 1) {
                    currentPage--;

                    /* Delete additional trs*/
                    var numberOfTrs = document.getElementById('highscore_tbody').childElementCount;

                    for (var trId = 10; trId < numberOfTrs; ++trId) {
                        var trToBeDeleted = document.getElementById('tr_' + trId);
                        trToBeDeleted.parentNode.removeChild(trToBeDeleted);
                    }

                    /* Clear search bar */
                    document.getElementById('nickname').value = "";

                    /* Display and hide too far away pages */
                    var prev2Page = currentPage - 2;
                    if (prev2Page > 3) {
                        document.getElementById('page_' + prev2Page).style.display = 'inline-block';
                    }

                    var next3Page = currentPage + 3;
                    if (next3Page < @lastPageNumber - 2 && next3Page > 3) {
                        document.getElementById('page_' + next3Page).style.display = 'none';
                    }

                    /* Stergem punctele de suspensie */
                    var textsToBeDeleted = document.getElementsByClassName("ephemerText");
                    for (var k = 0; k < textsToBeDeleted.length; ++k) {
                        textsToBeDeleted[k].parentNode.removeChild(textsToBeDeleted[k]);
                        --k;
                    }

                    /* Adaugam noile puncte de suspensie */
                    if (prev2Page > 3) {
                        document.getElementById('page_' + prev2Page).insertAdjacentHTML('beforeBegin',
                            '<div class="ephemerText" style="display: inline-block;">...</div>');
                    }

                    if (next3Page < @lastPageNumber - 2) {
                        document.getElementById('page_' + next3Page).insertAdjacentHTML('afterEnd',
                            '<div class="ephemerText" style="display: inline-block;">...</div>');
                    }

                    /* Change the color of the current button and of the old one */
                    currentPageButton = document.getElementById("page_" + currentPage);
                    currentPageButton.style.color = 'yellow';
                    document.getElementById("page_" + (currentPage + 1)).style.color = 'white';

                    var ourRequest = new XMLHttpRequest();
                    ourRequest.open('GET', 'http://localhost:51664/Home/Highscore/Json/' + currentPage);

                    ourRequest.onload = function() {
                        var ourData = JSON.parse(ourRequest.responseText);

                        for (var i = 0; i < ourData.length; ++i) {
                            var rankTd = document.getElementById("h_rank_" + i);
                            var nicknameTd = document.getElementById("h_nickname_" + i);
                            var valueTd = document.getElementById("h_value_" + i);

                            rankTd.innerHTML = (currentPage - 1) * 10 + i + 1;
                            nicknameTd.innerHTML = ourData[i].nickname;
                            valueTd.innerHTML = ourData[i].value;
                        }

                        for (var j = ourData.length; j < 10; ++j) {
                            var rankTd2 = document.getElementById("h_rank_" + j);
                            var nicknameTd2 = document.getElementById("h_nickname_" + j);
                            var valueTd2 = document.getElementById("h_value_" + j);

                            rankTd2.innerHTML = "";
                            nicknameTd2.innerHTML = "";
                            valueTd2.innerHTML = "";
                        }
                    }

                    ourRequest.send();
                }
            });

        /* Funcitonality of "Next" button */
        rightButton.addEventListener("click",
            function() {
                if (isLastPage === false) {
                    currentPage++;

                    /* Delete additional trs*/
                    var numberOfTrs = document.getElementById('highscore_tbody').childElementCount;

                    for (var trId = 10; trId < numberOfTrs; ++trId) {
                        var trToBeDeleted = document.getElementById('tr_' + trId);
                        trToBeDeleted.parentNode.removeChild(trToBeDeleted);
                    }

                    /* Clear search bar */
                    document.getElementById('nickname').value = "";

                    /* Display and hide too far away pages */
                    var next2Page = currentPage + 2;
                    if (next2Page < @lastPageNumber - 2) {
                        document.getElementById('page_' + next2Page).style.display = 'inline-block';
                    }

                    var prev3Page = currentPage - 3;
                    if (prev3Page > 3 && prev3Page < @lastPageNumber - 2) {
                        document.getElementById('page_' + prev3Page).style.display = 'none';
                    }

                    /* Sterge punctele de suspensie */
                    var textsToBeDeleted = document.getElementsByClassName("ephemerText");
                    for (var k = 0; k < textsToBeDeleted.length; ++k) {
                        textsToBeDeleted[k].parentNode.removeChild(textsToBeDeleted[k]);
                        --k;
                    }

                    /* Adaugam noile puncte de suspensie */
                    if (prev3Page > 3) {
                        document.getElementById('page_' + prev3Page).insertAdjacentHTML('afterEnd',
                            '<div class="ephemerText" style="display: inline-block;">...</div>');
                    }

                    if (next2Page < @lastPageNumber - 3) {
                        document.getElementById('page_' + next2Page).insertAdjacentHTML('afterEnd',
                            '<div class="ephemerText" style="display: inline-block;">...</div>');
                    }

                    /* Change the color of the current button and of the old one */
                    currentPageButton = document.getElementById("page_" + currentPage);
                    currentPageButton.style.color = 'yellow';
                    document.getElementById("page_" + (currentPage - 1)).style.color = 'white';

                    var ourRequest = new XMLHttpRequest();
                    ourRequest.open('GET', 'http://localhost:51664/Home/Highscore/Json/' + currentPage);

                    ourRequest.onload = function() {
                        var ourData = JSON.parse(ourRequest.responseText);

                        if (ourData.length < 10) {
                            isLastPage = true;
                        }

                        for (var i = 0; i < ourData.length; ++i) {
                            var rankTd3 = document.getElementById("h_rank_" + i);
                            var nicknameTd3 = document.getElementById("h_nickname_" + i);
                            var valueTd3 = document.getElementById("h_value_" + i);

                            rankTd3.innerHTML = (currentPage - 1) * 10 + (i + 1);
                            nicknameTd3.innerHTML = ourData[i].nickname;
                            valueTd3.innerHTML = ourData[i].value;
                        }

                        for (var j = ourData.length; j < 10; ++j) {
                            var rankTd4 = document.getElementById("h_rank_" + j);
                            var nicknameTd4 = document.getElementById("h_nickname_" + j);
                            var valueTd4 = document.getElementById("h_value_" + j);

                            rankTd4.innerHTML = "";
                            nicknameTd4.innerHTML = "";
                            valueTd4.innerHTML = "";
                        }
                    }

                    ourRequest.send();
                }
            });

        function getAjaxValues(page) {
            if (page !== @lastPageNumber) {
                isLastPage = false;
            }

            currentPage = page;
            var currentPageButton = document.getElementById("page_" + currentPage);

            /* Delete additional trs*/
            var numberOfTrs = document.getElementById('highscore_tbody').childElementCount;

            for (var trId = 10; trId < numberOfTrs; ++trId) {
                var trToBeDeleted = document.getElementById('tr_' + trId);
                trToBeDeleted.parentNode.removeChild(trToBeDeleted);
            }

            /* Clear search bar */
            document.getElementById('nickname').value = "";

            /* Show adjacent button */
            if (currentPage - 2 > 3) {
                document.getElementById('page_' + (currentPage - 2)).style.display = 'inline-block';
            }

            if (currentPage - 1 > 3) {
                document.getElementById('page_' + (currentPage - 1)).style.display = 'inline-block';
            }

            if (currentPage + 1 <= @lastPageNumber - 3) {
                document.getElementById('page_' + (currentPage + 1)).style.display = 'inline-block';
            }

            if (currentPage + 2 <= @lastPageNumber - 3) {
                document.getElementById('page_' + (currentPage + 2)).style.display = 'inline-block';
            }

            /* Sterge punctele de suspensie */
            var textsToBeDeleted = document.getElementsByClassName("ephemerText");
            for (var k = 0; k < textsToBeDeleted.length; ++k) {
                textsToBeDeleted[k].parentNode.removeChild(textsToBeDeleted[k]);
                --k;
            }

            /* Hide too far away pages */
            var pageToHideId = 4;
            var pageToHide = null;

            haveOnePageHidden = false;
            for (; pageToHideId <= currentPage - 3; pageToHideId++) {
                pageToHide = document.getElementById('page_' + pageToHideId);

                pageToHide.style.display = 'none';
                haveOnePageHidden = true;
            }

            /* Punctele de suspensie */
            if (haveOnePageHidden === true) {
                pageToHide.insertAdjacentHTML('afterEnd',
                    '<div class="ephemerText" style="display: inline-block;">...</div>');
            }

            haveOnePageHidden = false;
            for (pageToHideId = currentPage + 3; pageToHideId <= @lastPageNumber - 3; pageToHideId++) {
                pageToHide = document.getElementById('page_' + pageToHideId);

                pageToHide.style.display = 'none';
                haveOnePageHidden = true;
            }

            if (haveOnePageHidden === true) {
                pageToHide.insertAdjacentHTML('afterEnd',
                    '<div class="ephemerText" style="display: inline-block;">...</div>');
            }

            /* Change the color of the current button and of the old one */
            for (var i = 1; i <= @lastPageNumber; ++i) {
                document.getElementById("page_" + i).style.color = 'white';
            }
            currentPageButton.style.color = 'yellow';

            /* Use AJAX to get the highscore */
            var ourRequest = new XMLHttpRequest();
            ourRequest.open('GET', 'http://localhost:51664/Home/Highscore/Json/' + currentPage);

            ourRequest.onload = function() {
                var ourData = JSON.parse(ourRequest.responseText);

                if (ourData.length < 10) {
                    isLastPage = true;
                }

                for (var ii = 0; ii < ourData.length; ++ii) {
                    var rankTd3 = document.getElementById("h_rank_" + ii);
                    var nicknameTd3 = document.getElementById("h_nickname_" + ii);
                    var valueTd3 = document.getElementById("h_value_" + ii);

                    rankTd3.innerHTML = (currentPage - 1) * 10 + (ii + 1);
                    nicknameTd3.innerHTML = ourData[ii].nickname;
                    valueTd3.innerHTML = ourData[ii].value;
                }

                for (var j = ourData.length; j < 10; ++j) {
                    var rankTd4 = document.getElementById("h_rank_" + j);
                    var nicknameTd4 = document.getElementById("h_nickname_" + j);
                    var valueTd4 = document.getElementById("h_value_" + j);

                    rankTd4.innerHTML = "";
                    nicknameTd4.innerHTML = "";
                    valueTd4.innerHTML = "";
                }
            }

            ourRequest.send();
        }

        var searchButton = document.getElementById('searchButton');
        searchButton.addEventListener("click",
            function() {
                var ourRequest = new XMLHttpRequest();
                ourRequest.open('GET',
                    'http://localhost:51664/Home/SearchScoresByNickname?nickname=' +
                    document.getElementById('nickname').value);

                ourRequest.onload = function() {
                    var ourData = JSON.parse(ourRequest.responseText);

                    var numberOfTrs = document.getElementById('highscore_tbody').childElementCount;

                    for (var trId = 10; trId < numberOfTrs; ++trId) {
                        var trToBeDeleted = document.getElementById('tr_' + trId);
                        trToBeDeleted.parentNode.removeChild(trToBeDeleted);
                    }

                    for (var i = 0; i < ourData.length && i < 10; ++i) {
                        var rankTd = document.getElementById("h_rank_" + i);
                        var nicknameTd = document.getElementById("h_nickname_" + i);
                        var valueTd = document.getElementById("h_value_" + i);

                        rankTd.innerHTML = i + 1;
                        nicknameTd.innerHTML = ourData[i].nickname;
                        valueTd.innerHTML = ourData[i].value;
                    }

                    for (var j = ourData.length; j < 10; ++j) {
                        var rankTd2 = document.getElementById("h_rank_" + j);
                        var nicknameTd2 = document.getElementById("h_nickname_" + j);
                        var valueTd2 = document.getElementById("h_value_" + j);

                        rankTd2.innerHTML = "";
                        nicknameTd2.innerHTML = "";
                        valueTd2.innerHTML = "";
                    }

                    if (ourData.length > 10) {
                        document.getElementById('initialTr_9').insertAdjacentHTML('afterEnd',
                            ' <tr id="tr_' + 10 + '"><td id="h_rank_' + 10 + '"></td><td id="h_nickname_' + 10 + '"></td><td id="h_value_' + 10 + '"></td></tr>');
                    }

                    for (var k = 11; k < ourData.length; ++k) {
                        document.getElementById('tr_' + (k - 1)).insertAdjacentHTML('afterEnd',
                            ' <tr id="tr_' + k + '"><td id="h_rank_' + k + '"></td><td id="h_nickname_' + k + '"></td><td id="h_value_' + k + '"></td></tr>');

                        var rankTd5 = document.getElementById("h_rank_" + k);
                        var nicknameTd5 = document.getElementById("h_nickname_" + k);
                        var valueTd5 = document.getElementById("h_value_" + k);

                        rankTd5.innerHTML = k;
                        nicknameTd5.innerHTML = ourData[k - 1].nickname;
                        valueTd5.innerHTML = ourData[k - 1].value;
                    }

                    var table = document.getElementById('highscore_table');
                    table.style.height = '100%';
                }

                ourRequest.send();
            });
    </script>
}
